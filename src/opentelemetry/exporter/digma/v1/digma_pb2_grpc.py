# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from opentelemetry.exporter.digma.v1 import digma_pb2 as opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2


class DigmaCollectorStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Export = channel.unary_unary(
                '/opentelemetry.proto.digma.v1.DigmaCollector/Export',
                request_serializer=opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2.ExportRequest.SerializeToString,
                response_deserializer=opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2.ExportResponse.FromString,
                )


class DigmaCollectorServicer(object):
    """The greeting service definition.
    """

    def Export(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DigmaCollectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2.ExportRequest.FromString,
                    response_serializer=opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2.ExportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'opentelemetry.proto.digma.v1.DigmaCollector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DigmaCollector(object):
    """The greeting service definition.
    """

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/opentelemetry.proto.digma.v1.DigmaCollector/Export',
            opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2.ExportRequest.SerializeToString,
            opentelemetry_dot_exporter_dot_digma_dot_v1_dot_digma__pb2.ExportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
